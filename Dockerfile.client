# Use a specific Node.js version with security patches
FROM node:20.12.0-alpine3.19 AS build

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
# Use npm install instead of npm ci to handle package lock mismatches
RUN npm install --production && npm cache clean --force

# Copy source files and build
COPY . .
RUN npm run build

# Use specific nginx version for production
FROM nginx:1.25.4-alpine

# Copy built files and configuration
COPY --from=build /app/build /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Add security headers
RUN echo 'server_tokens off;' > /etc/nginx/conf.d/security.conf

# Use non-root user for better security
RUN addgroup -g 101 -S nginx \
    && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \
    && chown -R nginx:nginx /usr/share/nginx/html

USER nginx

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]